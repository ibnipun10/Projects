package com.UI.mybuddyapp;

import com.UI.Common.CommonFacebookClass;
import com.facebook.Session;
import com.facebook.SessionState;
import com.facebook.UiLifecycleHelper;
import com.facebook.model.GraphUser;
import com.facebook.widget.LoginButton;
import com.facebook.widget.ProfilePictureView;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.support.v4.app.Fragment;

public class MainFragment extends Fragment {

	private static final String TAG = "MainFragment";
	private UiLifecycleHelper uiHelper;
	private GraphUser user;
	private View view;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		view = inflater.inflate(R.layout.activity_main, container, false);

		LoginButton authButton = (LoginButton) view
				.findViewById(R.id.login_button);
		authButton.setFragment(this);

		authButton
				.setUserInfoChangedCallback(new LoginButton.UserInfoChangedCallback() {
					@Override
					public void onUserInfoFetched(GraphUser user) {

						if (user != null) {
							MainFragment.this.user = user;
							TextView welcomeText = (TextView) view
									.findViewById(R.id.WelcomeID);
							welcomeText.setText(user.getName());

							ProfilePictureView  myImg = (ProfilePictureView) view
									.findViewById(R.id.ProfilePicture);
							myImg.setProfileId(user.getId());
						}
					}
				});

		Button btnHometown = (Button) view.findViewById(R.id.btnHometown);
		btnHometown.setOnClickListener(TapOnHomeTownButton);

		Button btnLocation = (Button) view.findViewById(R.id.btnLocation);
		btnLocation.setOnClickListener(TapOnLocationBUtton);

		return view;
	}

	private View.OnClickListener TapOnHomeTownButton = new View.OnClickListener() {
		@Override
		public void onClick(View view) {
			CommonFacebookClass.bHomeTown = true;
			Intent intent = new Intent(view.getContext(), MapActivity.class);
			startActivity(intent);
		}
	};

	private View.OnClickListener TapOnLocationBUtton = new View.OnClickListener() {
		@Override
		public void onClick(View view) {
			CommonFacebookClass.bHomeTown = false;
			Intent intent = new Intent(view.getContext(), MapActivity.class);
			startActivity(intent);
		}
	};

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		uiHelper = new UiLifecycleHelper(getActivity(), callback);
		uiHelper.onCreate(savedInstanceState);
	}

	private void onSessionStateChange(Session session, SessionState state,
			Exception exception) {
		try
		{
		if (state.isOpened()) {
			CommonFacebookClass.session = session;
			CommonFacebookClass.GetFriendsDetails("8818104");
		} else if (state.isClosed()) {
			Log.i(TAG, "Logged out...");
			
		}
		}
		catch(Exception ex)
		{
			
		}
	}

	private Session.StatusCallback callback = new Session.StatusCallback() {
		@Override
		public void call(Session session, SessionState state,
				Exception exception) {
			onSessionStateChange(session, state, exception);
		}
	};

	@Override
	public void onResume() {
		super.onResume();

		// For scenarios where the main activity is launched and user
		// session is not null, the session state change notification
		// may not be triggered. Trigger it if it's open/closed.
		Session session = Session.getActiveSession();
		if (session != null && (session.isOpened() || session.isClosed())) {
			onSessionStateChange(session, session.getState(), null);
		}

		uiHelper.onResume();
	}

	@Override
	public void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);
		uiHelper.onActivityResult(requestCode, resultCode, data);
	}

	@Override
	public void onPause() {
		super.onPause();
		uiHelper.onPause();
	}

	@Override
	public void onDestroy() {
		super.onDestroy();
		uiHelper.onDestroy();
	}

	@Override
	public void onSaveInstanceState(Bundle outState) {
		super.onSaveInstanceState(outState);
		uiHelper.onSaveInstanceState(outState);
	}

}
